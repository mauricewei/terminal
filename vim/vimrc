" 设置外观 -------------------------------------
set number                      "显示行号
set cursorline                  "突出显示当前行"
set cursorcolumn                "突出显示当前列"

""" 配色设置 ----------------------------------
set t_Co=256
if has("gui_running")
    set guioptions=gR
    set mousemodel=popup
    set background=light
else
    set background=dark
endif
:silent! colorscheme solarized

" 其他杂项 -------------------------------------
filetype on
syntax on                       "开启语法高亮
set backspace+=indent,eol,start "set backspace&可以对其重置
set scrolloff=5                 "距离顶部和底部5行
set mouse=a                     "启用鼠标
set incsearch                   "输入搜索内容时就显示搜索结果
set hlsearch                    "高亮搜索项
set autoindent                  "参考上一行的缩进方式进行自动缩进
set tabstop=4
set expandtab
set encoding=utf-8
au BufNewFile,BufRead *.py set tabstop=4|set shiftwidth=4|set textwidth=79|set expandtab|set autoindent|set fileformat=unix
au BufNewFile,BufRead *.html,*.js,*.css set tabstop=2|set softtabstop=2|set shiftwidth=2
autocmd FileType yaml setlocal ai ts=2 sw=2 et "设置yaml文件tab键

" 快捷键设置 ----------------------------------
:nmap tl :TagbarToggle<CR>
:map nu :set nu<CR>
:map nnu :set nonu<CR>
:nmap mo :set mouse=a<CR>
:nmap nmo :set mouse=<CR>

" Return to last edit position when opening files (You want this!) ---------------
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif
" set it to the first line when editing a git commit message ---------------------
 au FileType gitcommit au! BufEnter COMMIT_EDITMSG
    \ call setpos('.', [0, 1, 1, 0])

" 加载插件 ------------------------------------
  set nocompatible
  set rtp+=~/.vim/bundle/Vundle.vim
  set rtp+=$GOPATH/src/github.com/golang/lint/misc/vim
  call vundle#begin()
    " 安装Vundle
    Plugin 'gmarik/Vundle.vim'
    " 安装NERDTree
    Plugin 'scrooloose/nerdtree'
    Plugin 'Xuyuanp/nerdtree-git-plugin'
    " 安装YCM
    Plugin 'Valloric/YouCompleteMe'
    " 状态栏增强展示
    Plugin 'bling/vim-airline'
    " indentLine是一款缩进指示线
    Plugin 'Yggdroot/indentLine'
    " tagbar
    Plugin 'majutsushi/tagbar'
    " 使用bracketed-paste mode，粘贴代码时避免格式化
    Plugin 'ConradIrwin/vim-bracketed-paste'
    " 高亮行末空格(标红), 也可以一键去除文件中所有行行尾空格
    Plugin 'bronson/vim-trailing-whitespace'
    " 标签展示以及快速跳转(增强vim的书签功能)
    Plugin 'kshenoy/vim-signature'
    " python语法检查插件
    Plugin 'w0rp/ale'
    " Golang插件
    Plugin 'fatih/vim-go'
  call vundle#end()

" 插件配置项 -----------------------------------
" 配置NERDTree
map <F3> :NERDTreeToggle<CR> "使用F3键快速调出和隐藏它
let NERDTreeChDirMode=1
let NERDTreeShowBookmarks=1 "显示书签
let NERDTreeIgnore=['\~$', '\.pyc$', '\.swp$'] "设置忽略文件类型
let NERDTreeWinSize=40 "窗口大小
let g:NERDTreeDirArrowExpandable = '▸' "修改默认箭头
let g:NERDTreeDirArrowCollapsible = '▾' "修改默认箭头
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
"How can I open NERDTree automatically when vim starts up on opening a directory?
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
"关闭vim时，如果打开的文件除了NERDTree没有其他文件时，它自动关闭，减少多次按:q!
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
"开发的过程中，我们希望git信息直接在NERDTree中显示出来， 和Eclipse一样，修改的文件和增加的文件都给出相应的标注， 这时需要安装的插件就是 nerdtree-git-plugin,配置信息如下
let g:NERDTreeGitStatusIndicatorMapCustom= {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }
let NERDTreeShowLineNumbers=1 "显示行号
let NERDTreeAutoCenter=1
let g:nerdtree_tabs_open_on_console_startup=1 "在终端启动vim时，共享NERDTree
" END配置NERDTree

" 配置indentline
let g:indentLine_char='¦' "支持任意ASCII码，也可以使用特殊字符：¦, ┆, or │ ，但只在utf-8编码下有效
let g:indentLine_enabled = 1 "使indentline生效
autocmd FileType json,markdown let g:indentLine_conceallevel=0
autocmd FileType javascript,python,c,cpp,java,vim,shell let g:indentLine_conceallevel=2
" EDN配置indentline

" 配置vim-trailing-whitespace
map <leader><space> :FixWhitespace<cr>
" END配置vim-trailing-whitespace

" 配置w0rp/ale
 let g:ale_fix_on_save = 1
 let g:ale_completion_enabled = 1
 let g:ale_sign_column_always = 1
 let g:airline#extensions#ale#enabled = 1
" END配置w0rp/ale

" 配置tagbar
let tagbar_width=32 "设置标签子窗口的宽度
let g:tagbar_compact=1 "tagbar 子窗口中不显示冗余帮助信息
" END配置tagbar

"配置vim-go 插件
let g:go_fmt_command = "goimports" " 格式化将默认的 gofmt 替换
let g:go_autodetect_gopath = 1
let g:go_list_type = "quickfix"
let g:go_version_warning = 1
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_methods = 1
let g:go_highlight_generate_tags = 1
let g:godef_split=2
"配置vim-go 插件
